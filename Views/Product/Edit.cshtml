@model Website.Models.Product.ProductModel
@using Telerik.Web.Mvc.UI;
@using Website.Models.Product;
@{
    ViewBag.Title = "Xửa sản phẩm";
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<script src="@Url.Content("~/Content/Plugin/ckeditor/ckeditor.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Plugin/ckfinder/ckfinder.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
@{
    var select = Html.DropDownList("Manufacturer", (IEnumerable<SelectListItem>)ViewData["menufacture"]).ToString();
}
<h2>Xửa lại sản phẩm</h2>

@using (Html.BeginForm("Edit", "Product", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "result", OnComplete = "onComplate()" }))
{
    @Html.ValidationSummary(true)

    <div class="options">
        <input type="submit" name="save" class="t-button" value="Save" />
        <input type="submit" name="save-continue" class="t-button" value="Save and continues" />
    </div>
    <p></p>
    Html.Telerik().TabStrip()
      .Name("TabStrip")
      .Items(TabStrip =>
      {
          TabStrip.Add().Text("Sản phẩm").Content(TabInfo().ToHtmlString());
          TabStrip.Add().Text("Ảnh miêu tả").Content(TabImages().ToHtmlString());
          TabStrip.Add().Text("Nhà sản xuất").Content(TabMenufacture().ToHtmlString());
          TabStrip.Add().Text("Thuộc tính").Content(TabAttribute().ToHtmlString());
          TabStrip.Add().Text("Danh mục").Content(TabCategory().ToHtmlString());
      }
      ).SelectedIndex(0).Render();
    @helper TabInfo()
{
        <fieldset>
            <legend>Products</legend>
            <table class="table-admin-create">

                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.ProductName)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.products.ProductName)<br />
                        @Html.ValidationMessageFor(model => model.products.ProductName)<br />
                    </td>
                </tr>

                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.Description)
                    </td>
                    <td>
                        @Html.TextAreaFor(model => model.products.Description)<br />
                        @Html.ValidationMessageFor(model => model.products.Description)<br />
                    </td>
                </tr>
                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.Image)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.products.Image, new { @id = "txtUpload" })
                        <input id="btUpload" name="Chọn ảnh" type="button" value="Chọn Ảnh(300x300)" style="width: 150px; margin-left: 20px; height:30px;" /><br />
                        @Html.ValidationMessageFor(model => model.products.Image)<br />
                    </td>
                </tr>
                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.Detail)
                    </td>
                    <td>
                        @Html.TextAreaFor(model => model.products.Detail, new { @id = "txtdetail" })<br />
                        @Html.ValidationMessageFor(model => model.products.Detail)<br />
                        <br />
                        <script type="text/javascript">
                            var editor;
                            function createEditor(languageCode, id, height, width) {
                                var editor = CKEDITOR.replace(id, {
                                    language: languageCode,
                                });
                            }

                            $(document).ready(function () {
                                createEditor('vi', 'txtdetail', 300, 750);
                            });
                     
                        </script>
                    </td>
                </tr>

                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.Price)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.products.Price)<br />
                        @Html.ValidationMessageFor(model => model.products.Price)<br />
                    </td>
                </tr>

                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.SaleOff)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.products.SaleOff)<br />
                        @Html.ValidationMessageFor(model => model.products.SaleOff)<br />
                    </td>
                </tr>
                @*<tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.Tag)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.products.Tag)<br />
                        @Html.ValidationMessageFor(model => model.products.Tag)<br />
                    </td>
                </tr>
                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.isSaleOff)
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => model.products.isSaleOff)<br />
                        @Html.ValidationMessageFor(model => model.products.isSaleOff)<br />
                    </td>
                </tr>
                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.displayHome)
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => model.products.displayHome)<br />
                        @Html.ValidationMessageFor(model => model.products.displayHome)<br />
                    </td>
                </tr>*@
                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.Active)
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => model.products.Active)<br />
                        @Html.ValidationMessageFor(model => model.products.Active)<br />
                    </td>
                </tr>
                <tr>
                    <td>
                        <img src="/Images/ico-help.gif" />
                    </td>
                    <td style="width: 150px;">
                        @Html.LabelFor(model => model.products.CreateDate)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.products.CreateDate, new {@Value=DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss")})
                        @Html.HiddenFor(model => model.products.UserCreate, new { @value = User.Identity.Name })
                        @Html.HiddenFor(model => model.products.ProductId)
                        @Html.HiddenFor(model => model.products.ViewNumber)
                    </td>
                </tr>
            </table>
        </fieldset>
    }

    @helper TabImages()
{
    
        @(Html.Telerik().Grid<ProductModel.ProductImageModel>()
                    .Name("productimage-grid")
                       .DataKeys(keys =>
                       {
                           keys.Add(x => x.Id);
                       })
                       .DataBinding(dataBinding =>
                       {
                           dataBinding.Ajax()
                               .Select("ListImageProduct", "Product", new { productId = Model.products.ProductId })
                               .Insert("ProductManufacturerInsert", "Product", new { productId = Model.products.ProductId })
                               .Update("ProductImageDelete", "Product")
                               .Delete("ProductImageDelete", "Product");
                       })
                       .Columns(columns =>
                       {
                           columns.Bound(x => x.Image)
                               .ClientTemplate("<img alt='<#= Image #>' src='<#= Image#>' width='150' />")
                            .ReadOnly();
                           columns.Bound(x => x.istrue)
                               .Width(100);
                           columns.Bound(x => x.SeoName)
                               .Width(400);
                           columns.Command(commands =>
                           {
                               //commands.Edit().Text("edit");
                               commands.Delete().Text("delete");
                           })
                           .Width(180);
                       })
                       .EnableCustomBinding(true))
@*dataBinding.Ajax()
                               .Select("ListImageProduct", "Product", new { productId = Model.products.ProductId })
                               .Delete("ProductImageDelete", "Product");
                       })
                       .Columns(columns =>
                       {
                           columns.Bound(x => x.Image)
                               .ClientTemplate("<a href='<#= Image #>' target='_blank'><img alt='<#= Image #>' src='<#= Image #>' width='150' /><a/>")
                            .ReadOnly();*@
        <p>
            <strong>Thêm mới</strong>
        </p>   
        <table class="adminContent">
            <tr>
                <td class="adminTitle">Đường dẫn ảnh :
                </td>
                <td class="adminData">
                    <input type="text" id="txtUploadimage" disabled="disabled" />
                    <input id="btUploadimage" name="Chọn ảnh" type="button" value="Chọn Ảnh" style="width: 100px; margin-left: 20px;" /><br />
                </td>
            </tr>
            <tr>
                <td class="adminTitle">Tên ảnh cần seo:
                </td>
                <td class="adminData">
                    @Html.TextBoxFor(model => model.images.SeoName)<br />
                    @Html.ValidationMessageFor(model => model.images.SeoName)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">Ảnh đại diện :
                </td>
                <td class="adminData">
                    <input id="images_istrue" type="checkbox" />
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <input type="text" value="@Model.products.ProductId" id="product_productid" style="display:none" />
                    <input type="button" id="addProductPicture" class="t-button" value="Thêm mới" />
                </td>
            </tr>
        </table>
    }
    @helper TabMenufacture()
{
        @(Html.Telerik().Grid<ProductModel.ProductManufacturerModel>()
                    .Name("productmanufacturers-grid")
                       .DataKeys(keys =>
                       {
                           keys.Add(x => x.Id);
                       })
                       .DataBinding(dataBinding =>
                       {
                           dataBinding.Ajax()
                               .Select("ListMenufactureProduct", "Product", new { productId = Model.products.ProductId })
                               .Insert("ProductManufacturerInsert", "Product", new { productId = Model.products.ProductId })
                               .Update("ProductManufacturerUpdate", "Product")
                               .Delete("ProductManufacturerDelete", "Product");
                       })
                       .Columns(columns =>
                       {
                           columns.Bound(x => x.Manufacturer)
                               .Width(500);
                           columns.Bound(x => x.IsFeaturedProduct)
                               .Width(100);
                           columns.Command(commands =>
                           {
                               commands.Edit().Text("edit");
                               commands.Delete().Text("delete");
                           })
                           .Width(180);
                       })
                       .ToolBar(commands => commands.Insert())
                       .ClientEvents(events => events.OnEdit("onProductManufacturerEdit"))
                       .EnableCustomBinding(true))
        <script type="text/javascript">
            function onProductManufacturerEdit(e) {
                var a = $("#menufacture_repalce").text();
                var b = a;
                $('#Manufacturer').replaceWith(b)
            }
        </script>
    
        <div id="menufacture_repalce" style="display: none;">
            @Html.DropDownList("Manufacturer", (IEnumerable<SelectListItem>)ViewData["menufacture"]).ToString()
        </div>
    
    
    }

    @helper TabAttribute()
{
        @(Html.Telerik().Grid<ProductModel.ProductAttributeModel>()
                    .Name("productattribute-grid")
                       .DataKeys(keys =>
                       {
                           keys.Add(x => x.Id);
                       })
                       .DataBinding(dataBinding =>
                       {
                           dataBinding.Ajax()
                               .Select("ListAttributeProduct", "Product", new { productId = Model.products.ProductId })
                               .Insert("ProductAttributeInsert", "Product", new { productId = Model.products.ProductId })
                               .Update("ProductAttributeUpdate", "Product")
                               .Delete("ProductAttributeDelete", "Product");
                       })
                       .Columns(columns =>
                       {
                           columns.Bound(x => x.AttributeName)
                               .Width(500);
                           columns.Bound(x => x.IsFeaturedProduct)
                               .Width(100);
                           columns.Command(commands =>
                           {
                               commands.Edit().Text("edit");
                               commands.Delete().Text("delete");
                           })
                           .Width(180);
                       })
                       .ToolBar(commands => commands.Insert())
                       .ClientEvents(events => events.OnEdit("onProductManufacturerEdit"))
                       .EnableCustomBinding(true))
        <script type="text/javascript">
            function onProductManufacturerEdit(e) {
                var a = $("#attribute_repalce").text();
                var b = a;
                $('#AttributeName').replaceWith(b)
            }
        </script>
    
        <div id="attribute_repalce" style="display: none;">
            @Html.DropDownList("AttributeName", (IEnumerable<SelectListItem>)ViewData["attribute"]).ToString()
        </div>
  
    }

    @helper TabCategory()
{
    
        @(Html.Telerik().Grid<Website.Models.Product.ProductModel.ProductCategoryModel>()
                    .Name("productcategory-grid")
                       .DataKeys(keys =>
                       {
                           keys.Add(x => x.Id);
                       })
                       .DataBinding(dataBinding =>
                       {
                           dataBinding.Ajax()
                               .Select("ListCategoryProduct", "Product", new { productId = Model.products.ProductId })
                               .Insert("ProductCategoryInsert", "Product", new { productId = Model.products.ProductId })
                               .Update("ProductCategoryUpdate", "Product")
                               .Delete("ProductCategoryDelete", "Product");
                       })
                       .Columns(columns =>
                       {
                           columns.Bound(x => x.Category)
                               .Width(500);
                           columns.Bound(x => x.IsFeaturedProduct)
                               .Width(100);
                           columns.Command(commands =>
                           {
                               commands.Edit().Text("edit");
                               commands.Delete().Text("delete");
                           })
                           .Width(180);
                       })
                       .ToolBar(commands => commands.Insert())
                       .ClientEvents(events => events.OnEdit("onProductCategoryEdit"))
                       .EnableCustomBinding(true))
        <script type="text/javascript">
            function onProductCategoryEdit(e) {
                var a = $("#category_repalce").text();
                var b = a;
                $('#Category').replaceWith(b)
            }
        </script>
    
        <div id="category_repalce" style="display: none;">
            @Html.DropDownList("Category", (IEnumerable<SelectListItem>)ViewData["category"]).ToString()
        </div>
    

    }

    
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
